// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:	
	//Set load bit of specified register
	DMux8Way(in = load, sel = address, a = reg1, b = reg2, c = reg3, d = reg4, e = reg5, f = reg6, g = reg7, h = reg8);
	//register operations
	Register(in = in, load = reg1, out = out1);
	Register(in = in, load = reg2, out = out2);
	Register(in = in, load = reg3, out = out3);
	Register(in = in, load = reg4, out = out4);
	Register(in = in, load = reg5, out = out5);
	Register(in = in, load = reg6, out = out6);
	Register(in = in, load = reg7, out = out7);
	Register(in = in, load = reg8, out = out8);
	//set out to out of specified register
	Mux8Way16(a = out1, b = out2, c = out3, d = out4, e = out5, f = out6, g = out7, h = out8, sel = address, out = out);
	
}